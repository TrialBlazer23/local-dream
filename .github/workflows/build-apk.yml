name: Build Android APK

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install NDK
      run: |
        echo "Installing Android NDK..."
        sdkmanager "ndk;26.1.10909125"
        
    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        target: aarch64-linux-android
        
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build cmake
        
  # Note: QNN SDK is required but needs to be manually provided
  # Optional: If you have access to QNN SDK, uncomment the next steps and
  #           set QNN_SDK_ROOT (e.g., via GitHub Environments/Secrets).
  # - name: Prepare QNN runtime assets
  #   env:
  #     QNN_SDK_ROOT: ${{ secrets.QNN_SDK_ROOT }}
  #   run: |
  #     chmod +x scripts/prepare-qnn-assets.sh
  #     ./scripts/prepare-qnn-assets.sh
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build Debug APK (without native libs for now)
      run: ./gradlew assembleBasicDebug
      continue-on-error: true
      
    - name: Upload Debug APK if available
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: app-debug
        path: app/build/outputs/apk/**/debug/*.apk
        if-no-files-found: warn
        
    - name: List build outputs
      if: always()
      run: |
        echo "Build output directory contents:"
        find app/build/outputs -type f 2>/dev/null || echo "No build outputs found"
