diff --git a/3rdparty/SampleApp/src/QnnSampleApp.cpp b/3rdparty/SampleApp/src/QnnSampleApp.cpp
index 68a13c7..39bdd18 100755
--- a/3rdparty/SampleApp/src/QnnSampleApp.cpp
+++ b/3rdparty/SampleApp/src/QnnSampleApp.cpp
@@ -78,19 +78,19 @@ std::string sample_app::QnnSampleApp::getBackendBuildId() {
 //  2. Read all input list paths provided
 //      during creation.
 sample_app::StatusCode sample_app::QnnSampleApp::initialize() {
-  // Create Output Directory
-#ifndef __hexagon__
-  if (m_dumpOutputs && !::pal::FileOp::checkFileExists(m_outputPath) &&
-      !pal::Directory::makePath(m_outputPath)) {
-    exitWithMessage("Could not create output directory: " + m_outputPath, EXIT_FAILURE);
-  }
-#endif
-  // Read Input File List
-  bool readSuccess;
-  std::tie(m_inputFileLists, m_inputNameToIndex, readSuccess) = readInputLists(m_inputListPaths);
-  if (!readSuccess) {
-    exitWithMessage("Could not read input lists", EXIT_FAILURE);
-  }
+//   // Create Output Directory
+// #ifndef __hexagon__
+//   if (m_dumpOutputs && !::pal::FileOp::checkFileExists(m_outputPath) &&
+//       !pal::Directory::makePath(m_outputPath)) {
+//     exitWithMessage("Could not create output directory: " + m_outputPath, EXIT_FAILURE);
+//   }
+// #endif
+//   // Read Input File List
+//   bool readSuccess;
+//   std::tie(m_inputFileLists, m_inputNameToIndex, readSuccess) = readInputLists(m_inputListPaths);
+//   if (!readSuccess) {
+//     exitWithMessage("Could not read input lists", EXIT_FAILURE);
+//   }
   // initialize logging in the backend
   if (log::isLogInitialized()) {
     auto logCallback = log::getLogCallback();
diff --git a/3rdparty/SampleApp/src/QnnSampleApp.hpp b/3rdparty/SampleApp/src/QnnSampleApp.hpp
index a675ec7..26a3855 100755
--- a/3rdparty/SampleApp/src/QnnSampleApp.hpp
+++ b/3rdparty/SampleApp/src/QnnSampleApp.hpp
@@ -82,7 +82,7 @@ class QnnSampleApp {
 
   StatusCode verifyFailReturnStatus(Qnn_ErrorHandle_t errCode);
 
- private:
+//  private:
   StatusCode extractBackendProfilingInfo(Qnn_ProfileHandle_t profileHandle);
 
   StatusCode extractProfilingSubEvents(QnnProfile_EventId_t profileEventId);
diff --git a/3rdparty/SampleApp/src/Utils/IOTensor.hpp b/3rdparty/SampleApp/src/Utils/IOTensor.hpp
index fc5a0c2..84bdb2a 100755
--- a/3rdparty/SampleApp/src/Utils/IOTensor.hpp
+++ b/3rdparty/SampleApp/src/Utils/IOTensor.hpp
@@ -71,7 +71,7 @@ class IOTensor {
                                            size_t numInputTensors,
                                            size_t numOutputTensors);
 
- private:
+//  private:
   PopulateInputTensorsRetType_t populateInputTensor(const std::vector<std::string> &filePaths,
                                                     const size_t filePathsIndexOffset,
                                                     const bool loopBackToStart,
